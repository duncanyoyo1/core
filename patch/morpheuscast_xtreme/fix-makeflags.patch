diff --git a/Makefile b/Makefile
index 3a4f1479..f65d9d36 100644
--- a/Makefile
+++ b/Makefile
@@ -1,48 +1,56 @@
-DEBUG            ?= 0
-DEBUG_ASAN       ?= 0
-DEBUG_UBSAN      ?= 0
-NO_REND          ?= 0
-HAVE_GL          ?= 1
-HAVE_GL2         ?= 0
-HAVE_OIT         ?= 0
-HAVE_VULKAN      ?= 0
-HAVE_CORE        ?= 0
-NO_THREADS       ?= 0
-NO_EXCEPTIONS    ?= 0
-NO_NVMEM         ?= 0
-NO_VERIFY        ?= 1
-HAVE_GENERIC_JIT ?= 1
-HAVE_GL3         ?= 0
-FORCE_GLES       ?= 0
-STATIC_LINKING   ?= 0
-HAVE_TEXUPSCALE  ?= 1
-HAVE_OPENMP      ?= 0
-HAVE_CHD         ?= 1
-HAVE_CLANG       ?= 0
-HAVE_CDROM       ?= 0
-ENABLE_MODEM     ?= 1
+DEBUG         := 0
+DEBUG_ASAN    := 0
+DEBUG_UBSAN   := 0
+NO_REND       := 0
+HAVE_GL       := 1
+HAVE_GL2      := 0
+HAVE_OIT      ?= 0
+HAVE_VULKAN   := 0
+HAVE_CORE     := 0
+NO_THREADS    := 0
+NO_EXCEPTIONS := 0
+NO_NVMEM      := 0
+NO_VERIFY     := 1
+HAVE_LTCG     ?= 0
+HAVE_GENERIC_JIT := 1
+HAVE_GL3      := 0
+FORCE_GLES    := 0
+STATIC_LINKING:= 0
+HAVE_TEXUPSCALE := 0
+HAVE_OPENMP   := 0
+HAVE_CHD      := 1
+HAVE_CLANG    ?= 0
+HAVE_CDROM    := 0
+ENABLE_MODEM  := 1
 
 TARGET_NAME   := km_morpheuscast_xtreme
 
 ifeq ($(HAVE_CLANG),1)
-	CXX      ?= ${CROSS_COMPILE}clang++
-	CC       ?= ${CROSS_COMPILE}clang
+	CXX      = ${CC_PREFIX}clang++
+	CC       = ${CC_PREFIX}clang
 	SHARED   := -fuse-ld=lld
 else
-	CXX      ?= ${CROSS_COMPILE}g++
-	CC       ?= ${CROSS_COMPILE}gcc
+	CXX      ?= ${CC_PREFIX}g++
+	CC       ?= ${CC_PREFIX}gcc
 	SHARED   :=
 endif
+ifeq ($(HAVE_LTCG),1)
+	SHARED   += -flto
+endif
 
-CC_AS    ?= ${CROSS_COMPILE}as
+ifneq (${AS},)
+	CC_AS := ${AS}
+endif
+CC_AS    ?= ${CC_PREFIX}as
 
-#MFLAGS   :=
-#ASFLAGS  :=
-#LDFLAGS  :=
-#INCFLAGS :=
-#LIBS     :=
-CFLAGS   += -std=gnu99
-CXXFLAGS += -std=gnu++11
+MFLAGS   :=
+ASFLAGS  :=
+LDFLAGS  :=
+LDFLAGS_END :=
+INCFLAGS :=
+LIBS     :=
+CFLAGS   :=
+CXXFLAGS :=
 
 GIT_VERSION := " $(shell git rev-parse --short HEAD || echo unknown)"
 ifneq ($(GIT_VERSION)," unknown")
@@ -116,7 +124,7 @@ ifeq ($(STATIC_LINKING),1)
 endif
 
 # Unix
-ifneq (,$(findstring NOunix,$(platform)))
+ifneq (,$(findstring unix,$(platform)))
 	EXT    ?= so
 	TARGET := $(TARGET_NAME)_libretro.$(EXT)
 	SHARED += -shared -Wl,--version-script=link.T
@@ -155,7 +163,7 @@ ifneq (,$(findstring NOunix,$(platform)))
 else ifneq (,$(findstring rpi,$(platform)))
 	EXT    ?= so
 	TARGET := $(TARGET_NAME)_libretro.$(EXT)
-	SHARED += -shared -Wl,--version-script=link.T -Wl,--as-needed -Wl,--no-undefined
+	SHARED += -shared -Wl,--version-script=link.T
 	fpic = -fPIC
 	LIBS += -lrt
 	ARM_FLOAT_ABI_HARD = 1
@@ -163,7 +171,7 @@ else ifneq (,$(findstring rpi,$(platform)))
 	PLATFORM_EXT := unix
 	WITH_DYNAREC=arm
 	HAVE_GENERIC_JIT = 0
-	
+
 	ifneq (,$(findstring rpi4,$(platform)))
 		FORCE_GLES = 1
 		# The Pi4 has mature Vulkan support when using up-to-date MESA.
@@ -220,7 +228,7 @@ else ifneq (,$(findstring rpi,$(platform)))
 		CORE_DEFINES += -DLOW_END
 	endif
 
-# ARM64 TRIMUI BRICK 
+# ARM64 TRIMUI BRICK
 else ifeq ($(platform), brick)
  	EXT ?= so
 	CC_AS    = ${CC_PREFIX}${CC} #The ngen_arm.S must be compiled with gcc
@@ -241,6 +249,7 @@ else ifeq ($(platform), brick)
 	WITH_DYNAREC=arm64
 	HAVE_GENERIC_JIT = 0
 	HAVE_VULKAN = 0
+	HAVE_LTCG = 0
 	CORE_DEFINES += -DLOW_END
 	LDFLAGS += -static-libgcc -static-libstdc++
 
@@ -248,7 +257,7 @@ else ifeq ($(platform), brick)
 # Platform affix = classic_<ISA>_<ÂµARCH>
 #########################################
 # (armv7 a7, hard point, neon based) ####
-# NESC, SNESC, C64 mini 
+# NESC, SNESC, C64 mini
 else ifeq ($(platform), classic_armv7_a7)
 	EXT    ?= so
 	TARGET := $(TARGET_NAME)_libretro.$(EXT)
@@ -258,8 +267,10 @@ else ifeq ($(platform), classic_armv7_a7)
 	ARM_FLOAT_ABI_HARD = 1
 	FORCE_GLES = 1
 	SINGLE_PREC_FLAGS = 1
+	HAVE_LTCG = 0
 	HAVE_OPENMP = 1
 	CFLAGS += -Ofast \
+	-flto=4 -fwhole-program -fuse-linker-plugin \
 	-fdata-sections -ffunction-sections -Wl,--gc-sections \
 	-fno-stack-protector -fno-ident -fomit-frame-pointer \
 	-falign-functions=1 -falign-jumps=1 -falign-loops=1 \
@@ -296,19 +307,21 @@ else ifeq ($(platform), classic_armv8_a35)
 	ARM_FLOAT_ABI_HARD = 1
 	FORCE_GLES = 1
 	SINGLE_PREC_FLAGS = 1
+	HAVE_LTCG = 0
 	HAVE_OPENMP = 0
 	CFLAGS += -Ofast \
+	-fuse-linker-plugin \
 	-fno-stack-protector -fno-ident -fomit-frame-pointer \
 	-fmerge-all-constants -ffast-math -funroll-all-loops \
 	-marm -mcpu=cortex-a35 -mfpu=neon-fp-armv8 -mfloat-abi=hard
 	CXXFLAGS += $(CFLAGS)
 	ASFLAGS += $(CFLAGS)
-	LDFLAGS += -marm -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -Ofast
+	LDFLAGS += -marm -mcpu=cortex-a35 -mfpu=neon-fp-armv8 -mfloat-abi=hard -Ofast -flto -fuse-linker-plugin
 	PLATFORM_EXT := unix
 	WITH_DYNAREC = arm
 	HAVE_GENERIC_JIT = 0
 	CORE_DEFINES += -DLOW_END -DLOW_RES
-	
+
 #########################################
 
 # sun8i Allwinner H2+ / H3 for mainline Builds
@@ -347,9 +360,9 @@ else ifeq ($(platform), sun8i)
 	PLATFORM_EXT := unix
 	WITH_DYNAREC=arm
 	HAVE_GENERIC_JIT = 0
-	CORE_DEFINES += -DLOW_END 
-	
-	
+	CORE_DEFINES += -DLOW_END
+
+
 #########################################
 
 # sun8i Allwinner H2+ / H3 for Legacy Builds
@@ -365,14 +378,16 @@ else ifeq ($(platform), sun8i_legacy)
 	ARM_FLOAT_ABI_HARD = 1
 	FORCE_GLES = 1
 	SINGLE_PREC_FLAGS = 1
+	HAVE_LTCG = 0
 	HAVE_OPENMP = 0
 	CFLAGS += -Ofast \
+	-flto -fuse-linker-plugin \
 	-fno-stack-protector -fno-ident -fomit-frame-pointer \
 	-fmerge-all-constants -ffast-math -funroll-all-loops \
 	-marm -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard
 	CXXFLAGS += $(CFLAGS)
 	ASFLAGS += $(CFLAGS)
-	LDFLAGS += -marm -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -Ofast
+	LDFLAGS += -marm -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -Ofast -flto -fuse-linker-plugin
 	ifeq ($(shell echo `$(CC) -dumpversion` "< 4.9" | bc -l), 1)
 		CFLAGS += -march=armv7-a
 		LDFLAGS += -march=armv7-a
@@ -388,7 +403,7 @@ else ifeq ($(platform), sun8i_legacy)
 	WITH_DYNAREC = arm
 	HAVE_GENERIC_JIT = 0
 	CORE_DEFINES += -DLOW_END
-	
+
 #######################################
 
 # Generic AArch64 Cortex-A53 OpenGL ES 2.0 target
@@ -411,6 +426,7 @@ else ifeq ($(platform), arm64_cortex_a53_gles2)
 	WITH_DYNAREC=arm64
 	HAVE_GENERIC_JIT = 0
 	HAVE_VULKAN = 0
+	HAVE_LTCG = 0
 	CORE_DEFINES += -DLOW_END
 
 #######################################
@@ -434,6 +450,7 @@ else ifeq ($(platform), odroidc4)
 	WITH_DYNAREC=arm64
 	HAVE_GENERIC_JIT = 0
 	HAVE_VULKAN = 0
+	HAVE_LTCG = 0
 
 #######################################
 
@@ -455,6 +472,10 @@ else ifeq ($(platform), arm64)
 	PLATFORM_EXT := unix
 	WITH_DYNAREC=arm64
 	HAVE_GENERIC_JIT = 0
+	HAVE_LTCG = 0
+	LDFLAGS := $(filter-out -flto, $(LDFLAGS))
+	CFLAGS := $(filter-out -flto, $(CFLAGS))
+	CXXFLAGS := $(filter-out -flto, $(CXXFLAGS))
 #######################################
 
 # nvidia developer jetson nano kit (jetson-nano)
@@ -476,6 +497,10 @@ else ifeq ($(platform), jetson-nano)
 	WITH_DYNAREC=arm64
 	HAVE_GENERIC_JIT = 0
 	HAVE_VULKAN = 1
+	HAVE_LTCG = 0
+	LDFLAGS := $(filter-out -flto, $(LDFLAGS))
+	CFLAGS := $(filter-out -flto, $(CFLAGS))
+	CXXFLAGS := $(filter-out -flto, $(CXXFLAGS))
 
 # Nintendo Switch (Libnx)
 else ifeq ($(platform), libnx)
@@ -490,6 +515,7 @@ else ifeq ($(platform), libnx)
    HAVE_GENERIC_JIT = 0
    STATIC_LINKING = 1
    ENABLE_MODEM = 0
+   HAVE_LTCG = 0
    NO_NVMEM = 1
    # stubs
    SOURCES_C += $(CORE_DIR)/core/deps/switch/stubs.c
@@ -513,7 +539,8 @@ else ifeq ($(platform), odroid-n2)
 	PLATFORM_EXT := unix
 	WITH_DYNAREC=arm64
 	HAVE_GENERIC_JIT = 0
-	
+	HAVE_LTCG = 0
+
 	# Libre Computer La Frite
 else ifeq ($(platform), mali-drm-gles2)
 	EXT ?= so
@@ -530,6 +557,7 @@ else ifeq ($(platform), mali-drm-gles2)
 	PLATFORM_EXT := unix
 	WITH_DYNAREC=arm64
 	HAVE_GENERIC_JIT = 0
+	HAVE_LTCG = 0
 
 # Amlogic S905/S905X/S912 (AMLGXBB/AMLGXL/AMLGXM) e.g. Khadas VIM1/2 / S905X2 (AMLG12A) & S922X/A311D (AMLG12B) e.g. Khadas VIM3 - 32-bit userspace
 else ifneq (,$(findstring AMLG,$(platform)))
@@ -578,6 +606,7 @@ else ifneq (,$(findstring RK,$(platform)))
   FORCE_GLES = 1
   SINGLE_PREC_FLAGS = 1
   CPUFLAGS += -DNO_ASM -DARM_ASM -frename-registers -ftree-vectorize
+  HAVE_LTCG = 0
 
   ifneq (,$(findstring RK33,$(platform)))
     CFLAGS += -march=armv8-a+crc -mfpu=neon-fp-armv8
@@ -630,6 +659,7 @@ else ifeq ($(platform), rockpro64)
 	PLATFORM_EXT := unix
 	WITH_DYNAREC=arm
 	HAVE_GENERIC_JIT = 0
+	HAVE_LTCG = 0
 
 # Tinkerboard
 else ifeq ($(platform), tinkerboard)
@@ -648,7 +678,7 @@ else ifeq ($(platform), tinkerboard)
     PLATFORM_EXT := unix
     WITH_DYNAREC=arm
     HAVE_GENERIC_JIT = 0
-		
+
 # ODROIDs
 else ifneq (,$(findstring odroid,$(platform)))
 	EXT    ?= so
@@ -660,6 +690,7 @@ else ifneq (,$(findstring odroid,$(platform)))
 	ARM_FLOAT_ABI_HARD = 1
 	FORCE_GLES = 1
 	SINGLE_PREC_FLAGS = 1
+	HAVE_LTCG = 0
 
 	CPUFLAGS += -DNO_ASM -DARM_ASM -frename-registers -ftree-vectorize
 	CFLAGS += -marm -mfloat-abi=hard $(CPUFLAGS)
@@ -923,6 +954,7 @@ endif
 
 ifeq ($(WITH_DYNAREC), $(filter $(WITH_DYNAREC), x86_64 x64))
 	HOST_CPU_FLAGS = -DHOST_CPU=$(HOST_CPU_X64)
+	HAVE_LTCG = 0
 endif
 
 ifeq ($(WITH_DYNAREC), x86)
@@ -964,6 +996,7 @@ RZDCY_CFLAGS += $(HOST_CPU_FLAGS)
 include Makefile.common
 
 ifeq ($(WITH_DYNAREC), x86)
+	HAVE_LTCG = 0
 endif
 
 ifeq ($(DEBUG_ASAN),1)
@@ -995,14 +1028,17 @@ else
 	CORE_DEFINES   += -DNDEBUG
 	LDFLAGS        += -DNDEBUG
 
+	ifeq ($(HAVE_LTCG), 1)
+		CORE_DEFINES   += -flto
 	endif
+endif
 
 ifeq ($(HAVE_GL3), 1)
 	HAVE_CORE = 1
 	CORE_DEFINES += -DHAVE_GL3
 endif
 
-RZDCY_CFLAGS	+= $(CFLAGS) -c $(OPTFLAGS) -frename-registers -ftree-vectorize -fomit-frame-pointer 
+RZDCY_CFLAGS	+= $(CFLAGS) -c $(OPTFLAGS) -frename-registers -ftree-vectorize -fomit-frame-pointer
 
 ifeq ($(WITH_DYNAREC), arm)
 	ifneq (,$(findstring odroid,$(platform)))
@@ -1120,12 +1156,12 @@ CXXFLAGS       += $(CORE_DEFINES)
 CFLAGS   += $(OPTFLAGS) -c
 CFLAGS   += -fno-strict-aliasing
 CXXFLAGS += -fno-rtti -fpermissive -fno-operator-names
-LIBS     += -lm 
+LIBS     += -lm
 
 PREFIX        ?= /usr/local
 
 ifneq (,$(findstring arm, $(ARCH)))
-	CC_AS    = ${CROSS_COMPILE}gcc #The ngen_arm.S must be compiled with gcc, not as
+	CC_AS    = ${CC_PREFIX}${CC} #The ngen_arm.S must be compiled with gcc, not as
 	ASFLAGS  += $(CFLAGS)
 endif
 
@@ -1140,6 +1176,11 @@ ifeq ($(PGO_USE),1)
 	CFLAGS += -fprofile-use
 endif
 
+ifeq ($(LTO_TEST),1)
+	CFLAGS += -flto -fwhole-program
+	LDFLAGS +=-flto -fwhole-program
+endif
+
 CFLAGS     += $(fpic)
 CXXFLAGS   += $(fpic)
 LDFLAGS    += $(fpic)
@@ -1155,7 +1196,7 @@ else
 	LD = $(CXX)
 endif
 
-all: $(TARGET)	
+all: $(TARGET)
 $(TARGET): $(OBJECTS)
 ifeq ($(STATIC_LINKING), 1)
 	$(AR) rcs $@ $(OBJECTS)
@@ -1165,7 +1206,7 @@ endif
 
 %.o: %.cpp
 	$(CXX) $(INCFLAGS) $(CFLAGS) $(MFLAGS) $(CXXFLAGS) $< -o $@
-	
+
 %.o: %.c
 	$(CC) $(INCFLAGS) $(CFLAGS) $(MFLAGS) $< -o $@
 
@@ -1177,12 +1218,4 @@ endif
 
 clean:
 	rm -f $(OBJECTS) $(TARGET)
-	rm -f core/rec-ARM/rec_arm.o
-	rm -f core/rec-ARM/ngen_arm.o
-	rm -f core/libretro-common/glsym/glsym_es2.o
-
 
-# Final safeguard to remove any stray LTO flags
-CFLAGS := $(filter-out -flto -fuse-linker-plugin -fwhole-program,$(CFLAGS))
-CXXFLAGS := $(filter-out -flto -fuse-linker-plugin -fwhole-program,$(CXXFLAGS))
-LDFLAGS := $(filter-out -flto -fuse-linker-plugin -fwhole-program,$(LDFLAGS))
diff --git a/core/rend/gl4/gles.cpp b/core/rend/gl4/gles.cpp
index a2c104c2..eb9210ce 100644
--- a/core/rend/gl4/gles.cpp
+++ b/core/rend/gl4/gles.cpp
@@ -1,6 +1,7 @@
 #include <math.h>
 
 #include "gl4.h"
+#include "postprocess.h"
 
 gl4_ctx gl4;
 
diff --git a/core/rend/gles/gles.cpp b/core/rend/gles/gles.cpp
index 86df5f2b..868c7cb5 100644
--- a/core/rend/gles/gles.cpp
+++ b/core/rend/gles/gles.cpp
@@ -4,6 +4,7 @@
 #include <libretro.h>
 
 #include "gles.h"
+#include "postprocess.h"
 
 #ifndef GL_RED
 #define GL_RED                            0x1903
diff --git a/core/rend/gles/postprocess.cpp b/core/rend/gles/postprocess.cpp
index 1beb82fc..b282ce88 100644
--- a/core/rend/gles/postprocess.cpp
+++ b/core/rend/gles/postprocess.cpp
@@ -241,7 +241,6 @@ std::array<PostProcessShader, 8> PostProcessShader::shaders;
 
 void PostProcessor::Init()
 {
-	/*
 	this->width = screen_width;
 	this->height = screen_height;
 
@@ -293,11 +292,11 @@ void PostProcessor::Init()
 		glDisableVertexAttribArray(3);
 	}
 #endif
-	glCheck();*/
+	glCheck();
 }
 
 void PostProcessor::Term()
-{/*
+{
 	glcache.DeleteTextures(1, &texture);
 	texture = 0;
 	glDeleteFramebuffers(1, &framebuffer);
@@ -312,11 +311,11 @@ void PostProcessor::Term()
 #endif
 	vertexArray = 0;
 	PostProcessShader::term();
-	glCheck();*/
+	glCheck();
 }
 
 void PostProcessor::SelectFramebuffer()
-{/*
+{
 	if (framebuffer == 0)
 		Init();
 	glBindFramebuffer(GL_FRAMEBUFFER, framebuffer);
@@ -351,5 +350,5 @@ void PostProcessor::Render(GLuint output_fbo)
 
    glcache.ClearColor(0.f, 0.f, 0.f, 0.f);
    glClear(GL_COLOR_BUFFER_BIT);
-   glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);*/
+   glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);
 }
